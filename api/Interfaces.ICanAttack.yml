### YamlMime:ManagedReference
items:
- uid: Interfaces.ICanAttack
  commentId: T:Interfaces.ICanAttack
  id: ICanAttack
  parent: Interfaces
  children:
  - Interfaces.ICanAttack.Attack
  - Interfaces.ICanAttack.onAttackHit
  langs:
  - csharp
  - vb
  name: ICanAttack
  nameWithType: ICanAttack
  fullName: Interfaces.ICanAttack
  type: Interface
  source:
    remote:
      path: Assets/Scripts/interfaces/ICanAttack.cs
      branch: master
      repo: https://github.com/0xVector/mmo-rpg-unity.git
    id: ICanAttack
    path: Assets/Scripts/interfaces/ICanAttack.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Interfaces
  summary: Represents an object that can attack.
  example: []
  syntax:
    content: public interface ICanAttack
    content.vb: Public Interface ICanAttack
- uid: Interfaces.ICanAttack.Attack
  commentId: M:Interfaces.ICanAttack.Attack
  id: Attack
  parent: Interfaces.ICanAttack
  langs:
  - csharp
  - vb
  name: Attack()
  nameWithType: ICanAttack.Attack()
  fullName: Interfaces.ICanAttack.Attack()
  type: Method
  source:
    remote:
      path: Assets/Scripts/interfaces/ICanAttack.cs
      branch: master
      repo: https://github.com/0xVector/mmo-rpg-unity.git
    id: Attack
    path: Assets/Scripts/interfaces/ICanAttack.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Interfaces
  summary: Do the attack.
  example: []
  syntax:
    content: void Attack()
    content.vb: Sub Attack()
  overload: Interfaces.ICanAttack.Attack*
- uid: Interfaces.ICanAttack.onAttackHit
  commentId: E:Interfaces.ICanAttack.onAttackHit
  id: onAttackHit
  parent: Interfaces.ICanAttack
  langs:
  - csharp
  - vb
  name: onAttackHit
  nameWithType: ICanAttack.onAttackHit
  fullName: Interfaces.ICanAttack.onAttackHit
  type: Event
  source:
    remote:
      path: Assets/Scripts/interfaces/ICanAttack.cs
      branch: master
      repo: https://github.com/0xVector/mmo-rpg-unity.git
    id: onAttackHit
    path: Assets/Scripts/interfaces/ICanAttack.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Interfaces
  summary: >-
    Event that is triggered when the attack actually hits

    (eg. the animation hits the target).
  example: []
  syntax:
    content: event Action onAttackHit
    return:
      type: System.Action
    content.vb: Event onAttackHit As Action
references:
- uid: Interfaces
  commentId: N:Interfaces
  href: Interfaces.html
  name: Interfaces
  nameWithType: Interfaces
  fullName: Interfaces
- uid: Interfaces.ICanAttack.Attack*
  commentId: Overload:Interfaces.ICanAttack.Attack
  href: Interfaces.ICanAttack.html#Interfaces_ICanAttack_Attack
  name: Attack
  nameWithType: ICanAttack.Attack
  fullName: Interfaces.ICanAttack.Attack
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
